version: '3.5'
services:
    postgres:
        image: postgres:13
        container_name: data-talks-postgres
        env_file:
            - .env
        volumes:
            - postgres-db-volume:/var/lib/postgresql/data
            - ./airflow/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "airflow"]
            interval: 5s
            retries: 5
        restart: always
        ports:
            - "5433:5432"

    scheduler:
        build:
            context: airflow
            dockerfile: Dockerfile
        container_name: data-talks-scheduler
        command: scheduler
        restart: on-failure
        depends_on:
            - postgres
        env_file:
            - .env
        volumes:
            - ./airflow/dags:/opt/airflow/dags
            - ./airflow/logs:/opt/airflow/logs
            - ./airflow/plugins:/opt/airflow/plugins
            - ./airflow/scripts:/opt/airflow/scripts

    webserver:
        build:
            context: airflow
            dockerfile: Dockerfile
        container_name: data-talks-webserver
        entrypoint: /opt/airflow/scripts/entrypoint.sh
        restart: on-failure
        depends_on:
            - postgres
            - scheduler
        env_file:
            - .env
        volumes:
            - ./airflow/dags:/opt/airflow/dags
            - ./airflow/logs:/opt/airflow/logs
            - ./airflow/plugins:/opt/airflow/plugins
            - ./airflow/scripts:/opt/airflow/scripts
        user: "${AIRFLOW_UID:-50000}:0"
        ports:
            - "8080:8080"  # airflow terminal

    minio:
        image: minio/minio
        container_name: data-talks-minio # boto does not support underscores in host names
        ports:
            - "9000:9000"
            - "9090:9090" # terminal
        environment:
            - MINIO_ROOT_USER=$MINIO_ROOT_USER
            - MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
        volumes:
            - ./minio/data:/data
        command: ["server", "--console-address", ":9090", "--address", ":9000", "/data"]
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
            interval: 30s
            timeout: 20s
            retries: 3

    mc:
        image: minio/mc
        container_name: data-talks-mc
        depends_on:
            - minio
        environment:
            - MINIO_ROOT_USER=$MINIO_ROOT_USER
            - MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
        entrypoint: >
            /bin/sh -c "
            mc alias set myminio http://data-talks-minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD --api S3v4;
            mc admin trace myminio --verbose;
            "
        restart: unless-stopped

    clickhouse01:
        image: clickhouse/clickhouse-server
        container_name: data-talks-clickhouse01
        hostname: data-talks-clickhouse01
        ports:
            - "8123:8123" # HTTP interface
            - "9001:9000" # naive cli client
        volumes:
            - ./clickhouse/data/:/var/lib/clickhouse/
            - ./clickhouse/config.d/:/etc/clickhouse-server/config.d/*.xml
            - ./clickhouse/usert.d/:/etc/clickhouse-server/usert.d/*.xml
            - ./clickhouse/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
        env_file:
            -  .env

    metabase: # with clickhouse driver plugin
#        image: metabase/metabase:v0.45.1
        build:
            context: metabase
            dockerfile: Dockerfile
        container_name: data-talks-metabase
        ports:
        - "3002:3000"
        env_file:
            - .env
        depends_on:
            -   postgres

    mongo:
        image: mongo
        container_name: data-talks-mongo
        restart: always
        ports:
            - "27017:27017"
        volumes:
            - ./mongo/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
            - ./mongo/data/:/data/db
        environment:
            - MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME
            - MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD

    mongo-express:
        image: mongo-express
        container_name: data-talks-mongo-express
        restart: always
        depends_on:
            - mongo
        ports:
            - "8081:8081" # terminal
        environment:
            - ME_CONFIG_MONGODB_ADMINUSERNAME=$ME_CONFIG_MONGODB_ADMINUSERNAME
            - ME_CONFIG_MONGODB_ADMINPASSWORD=$ME_CONFIG_MONGODB_ADMINPASSWORD
            - ME_CONFIG_MONGODB_URL=$ME_CONFIG_MONGODB_URL

    superset:
        container_name: data-talks-superset
        build:
            context: superset
            dockerfile: Dockerfile
        restart: unless-stopped
        ports:
          - "8088:8088"
        depends_on:
          - postgres
          - clickhouse01
        volumes:
            - ./docker:/app/docker
            - superset_home:/app/superset_home
        env_file:
            - .env

volumes:
    postgres-db-volume:
    superset_home:
