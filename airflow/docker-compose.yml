version: '3.5'
services:
    postgres:
        image: postgres:13
        container_name: data-talks-postgres
        env_file:
            - .env
        volumes:
            - postgres-db-volume:/var/lib/postgresql/data
            - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "airflow"]
            interval: 5s
            retries: 5
        restart: always
        ports:
            - 5433:5432

    scheduler:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: data-talks-scheduler
        command: scheduler
        restart: on-failure
        depends_on:
            - postgres
        env_file:
            - .env
        volumes:
            - ./dags:/opt/airflow/dags
            - ./logs:/opt/airflow/logs
            - ./plugins:/opt/airflow/plugins
            - ./scripts:/opt/airflow/scripts
            - ~/.google/credentials/:/.google/credentials


    webserver:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: data-talks-webserver
        entrypoint: /opt/airflow/scripts/entrypoint.sh
        restart: on-failure
        depends_on:
            - postgres
            - scheduler
        env_file:
            - .env
        volumes:
            - ./dags:/opt/airflow/dags
            - ./logs:/opt/airflow/logs
            - ./plugins:/opt/airflow/plugins
            - ~/.google/credentials/:/.google/credentials:ro
            - ./scripts:/opt/airflow/scripts
        user: "${AIRFLOW_UID:-50000}:0"
        ports:
            - "8080:8080"

    minio:
        image: minio/minio
        container_name: data-talks-minio # boto does not support underscores in host names
        ports:
            - 9000:9000
            - 9090:9090
        environment:
            - MINIO_ROOT_USER=$MINIO_ROOT_USER
            - MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
        volumes:
            - ./minio/data:/data
        command: ["server", "--console-address", ":9090", "--address", ":9000", "/data"]
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
            interval: 30s
            timeout: 20s
            retries: 3

    mc:
        image: minio/mc
        container_name: data-talks-mc
        depends_on:
            - minio
        environment:
            - MINIO_ROOT_USER=$MINIO_ROOT_USER
            - MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
        entrypoint: >
            /bin/sh -c "
            mc alias set myminio http://data-talks-minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD --api S3v4;
            mc admin trace myminio --verbose;
            "

volumes:
  postgres-db-volume: